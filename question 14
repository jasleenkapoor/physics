import numpy as np
import matplotlib.pyplot as plt
x=np.array([5,10,15,20,25])
y=np.array([0.2,0.5,0.8,1.0,1.3])
yerr = np.array([0.05,0.05,0.05,0.05,0.05])
best_f = []
count = 0
minchi2 = 10000
minslope = 0.0
start = 0
stop = 1
step = 0.001
print('my estimate is 0.05\n')

for slope in np.arange(start, stop, step):
  count = 0
  for i in x:
    best_f.append(((float(y[count])-(slope*i))**2)/(yerr[count])**2)
    count+=1
  chi2 = np.sum(best_f)
  best_f=[]
  if(chi2<minchi2):
    minchi2=chi2
    minslope=slope
print('optimised slope value:', minslope, '\n')
fx = minslope*x

fx1 = 0.05*x
print('difference between my estimate and true value:', (minslope-0.05))
print('\nAccurate slope: Red\nGuessed slope: Green')

#print('the best fit score for this estimate is:',np.sum(best_f))

#the next line is the model prediction,
#where we make some initial guess
#what the slope of the line will be
#fx=0.04*x
plt.errorbar(x,y,yerr,fmt='bo')
plt.plot(x,fx,'r-')
plt.plot(x,fx1,'g-')
plt.show()
